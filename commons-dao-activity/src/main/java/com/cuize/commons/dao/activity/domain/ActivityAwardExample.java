package com.cuize.commons.dao.activity.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ActivityAwardExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table activity_award
	 * @mbggenerated  Wed Apr 27 16:46:59 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table activity_award
	 * @mbggenerated  Wed Apr 27 16:46:59 CST 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table activity_award
	 * @mbggenerated  Wed Apr 27 16:46:59 CST 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_award
	 * @mbggenerated  Wed Apr 27 16:46:59 CST 2016
	 */
	public ActivityAwardExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_award
	 * @mbggenerated  Wed Apr 27 16:46:59 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_award
	 * @mbggenerated  Wed Apr 27 16:46:59 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_award
	 * @mbggenerated  Wed Apr 27 16:46:59 CST 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_award
	 * @mbggenerated  Wed Apr 27 16:46:59 CST 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_award
	 * @mbggenerated  Wed Apr 27 16:46:59 CST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_award
	 * @mbggenerated  Wed Apr 27 16:46:59 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_award
	 * @mbggenerated  Wed Apr 27 16:46:59 CST 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_award
	 * @mbggenerated  Wed Apr 27 16:46:59 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_award
	 * @mbggenerated  Wed Apr 27 16:46:59 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_award
	 * @mbggenerated  Wed Apr 27 16:46:59 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table activity_award
	 * @mbggenerated  Wed Apr 27 16:46:59 CST 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andActivityCodeIsNull() {
			addCriterion("activity_code is null");
			return (Criteria) this;
		}

		public Criteria andActivityCodeIsNotNull() {
			addCriterion("activity_code is not null");
			return (Criteria) this;
		}

		public Criteria andActivityCodeEqualTo(String value) {
			addCriterion("activity_code =", value, "activityCode");
			return (Criteria) this;
		}

		public Criteria andActivityCodeNotEqualTo(String value) {
			addCriterion("activity_code <>", value, "activityCode");
			return (Criteria) this;
		}

		public Criteria andActivityCodeGreaterThan(String value) {
			addCriterion("activity_code >", value, "activityCode");
			return (Criteria) this;
		}

		public Criteria andActivityCodeGreaterThanOrEqualTo(String value) {
			addCriterion("activity_code >=", value, "activityCode");
			return (Criteria) this;
		}

		public Criteria andActivityCodeLessThan(String value) {
			addCriterion("activity_code <", value, "activityCode");
			return (Criteria) this;
		}

		public Criteria andActivityCodeLessThanOrEqualTo(String value) {
			addCriterion("activity_code <=", value, "activityCode");
			return (Criteria) this;
		}

		public Criteria andActivityCodeLike(String value) {
			addCriterion("activity_code like", value, "activityCode");
			return (Criteria) this;
		}

		public Criteria andActivityCodeNotLike(String value) {
			addCriterion("activity_code not like", value, "activityCode");
			return (Criteria) this;
		}

		public Criteria andActivityCodeIn(List<String> values) {
			addCriterion("activity_code in", values, "activityCode");
			return (Criteria) this;
		}

		public Criteria andActivityCodeNotIn(List<String> values) {
			addCriterion("activity_code not in", values, "activityCode");
			return (Criteria) this;
		}

		public Criteria andActivityCodeBetween(String value1, String value2) {
			addCriterion("activity_code between", value1, value2,
					"activityCode");
			return (Criteria) this;
		}

		public Criteria andActivityCodeNotBetween(String value1, String value2) {
			addCriterion("activity_code not between", value1, value2,
					"activityCode");
			return (Criteria) this;
		}

		public Criteria andAwardCodeIsNull() {
			addCriterion("award_code is null");
			return (Criteria) this;
		}

		public Criteria andAwardCodeIsNotNull() {
			addCriterion("award_code is not null");
			return (Criteria) this;
		}

		public Criteria andAwardCodeEqualTo(String value) {
			addCriterion("award_code =", value, "awardCode");
			return (Criteria) this;
		}

		public Criteria andAwardCodeNotEqualTo(String value) {
			addCriterion("award_code <>", value, "awardCode");
			return (Criteria) this;
		}

		public Criteria andAwardCodeGreaterThan(String value) {
			addCriterion("award_code >", value, "awardCode");
			return (Criteria) this;
		}

		public Criteria andAwardCodeGreaterThanOrEqualTo(String value) {
			addCriterion("award_code >=", value, "awardCode");
			return (Criteria) this;
		}

		public Criteria andAwardCodeLessThan(String value) {
			addCriterion("award_code <", value, "awardCode");
			return (Criteria) this;
		}

		public Criteria andAwardCodeLessThanOrEqualTo(String value) {
			addCriterion("award_code <=", value, "awardCode");
			return (Criteria) this;
		}

		public Criteria andAwardCodeLike(String value) {
			addCriterion("award_code like", value, "awardCode");
			return (Criteria) this;
		}

		public Criteria andAwardCodeNotLike(String value) {
			addCriterion("award_code not like", value, "awardCode");
			return (Criteria) this;
		}

		public Criteria andAwardCodeIn(List<String> values) {
			addCriterion("award_code in", values, "awardCode");
			return (Criteria) this;
		}

		public Criteria andAwardCodeNotIn(List<String> values) {
			addCriterion("award_code not in", values, "awardCode");
			return (Criteria) this;
		}

		public Criteria andAwardCodeBetween(String value1, String value2) {
			addCriterion("award_code between", value1, value2, "awardCode");
			return (Criteria) this;
		}

		public Criteria andAwardCodeNotBetween(String value1, String value2) {
			addCriterion("award_code not between", value1, value2, "awardCode");
			return (Criteria) this;
		}

		public Criteria andTotalCountIsNull() {
			addCriterion("total_count is null");
			return (Criteria) this;
		}

		public Criteria andTotalCountIsNotNull() {
			addCriterion("total_count is not null");
			return (Criteria) this;
		}

		public Criteria andTotalCountEqualTo(Integer value) {
			addCriterion("total_count =", value, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountNotEqualTo(Integer value) {
			addCriterion("total_count <>", value, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountGreaterThan(Integer value) {
			addCriterion("total_count >", value, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountGreaterThanOrEqualTo(Integer value) {
			addCriterion("total_count >=", value, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountLessThan(Integer value) {
			addCriterion("total_count <", value, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountLessThanOrEqualTo(Integer value) {
			addCriterion("total_count <=", value, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountIn(List<Integer> values) {
			addCriterion("total_count in", values, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountNotIn(List<Integer> values) {
			addCriterion("total_count not in", values, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountBetween(Integer value1, Integer value2) {
			addCriterion("total_count between", value1, value2, "totalCount");
			return (Criteria) this;
		}

		public Criteria andTotalCountNotBetween(Integer value1, Integer value2) {
			addCriterion("total_count not between", value1, value2,
					"totalCount");
			return (Criteria) this;
		}

		public Criteria andRemainCountIsNull() {
			addCriterion("remain_count is null");
			return (Criteria) this;
		}

		public Criteria andRemainCountIsNotNull() {
			addCriterion("remain_count is not null");
			return (Criteria) this;
		}

		public Criteria andRemainCountEqualTo(Integer value) {
			addCriterion("remain_count =", value, "remainCount");
			return (Criteria) this;
		}

		public Criteria andRemainCountNotEqualTo(Integer value) {
			addCriterion("remain_count <>", value, "remainCount");
			return (Criteria) this;
		}

		public Criteria andRemainCountGreaterThan(Integer value) {
			addCriterion("remain_count >", value, "remainCount");
			return (Criteria) this;
		}

		public Criteria andRemainCountGreaterThanOrEqualTo(Integer value) {
			addCriterion("remain_count >=", value, "remainCount");
			return (Criteria) this;
		}

		public Criteria andRemainCountLessThan(Integer value) {
			addCriterion("remain_count <", value, "remainCount");
			return (Criteria) this;
		}

		public Criteria andRemainCountLessThanOrEqualTo(Integer value) {
			addCriterion("remain_count <=", value, "remainCount");
			return (Criteria) this;
		}

		public Criteria andRemainCountIn(List<Integer> values) {
			addCriterion("remain_count in", values, "remainCount");
			return (Criteria) this;
		}

		public Criteria andRemainCountNotIn(List<Integer> values) {
			addCriterion("remain_count not in", values, "remainCount");
			return (Criteria) this;
		}

		public Criteria andRemainCountBetween(Integer value1, Integer value2) {
			addCriterion("remain_count between", value1, value2, "remainCount");
			return (Criteria) this;
		}

		public Criteria andRemainCountNotBetween(Integer value1, Integer value2) {
			addCriterion("remain_count not between", value1, value2,
					"remainCount");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("create_time is null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("create_time is not null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterion("create_time =", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterion("create_time <>", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterion("create_time >", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("create_time >=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterion("create_time <", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterion("create_time <=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIn(List<Date> values) {
			addCriterion("create_time in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotIn(List<Date> values) {
			addCriterion("create_time not in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterion("create_time between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterion("create_time not between", value1, value2,
					"createTime");
			return (Criteria) this;
		}

		public Criteria andProbabilityIsNull() {
			addCriterion("probability is null");
			return (Criteria) this;
		}

		public Criteria andProbabilityIsNotNull() {
			addCriterion("probability is not null");
			return (Criteria) this;
		}

		public Criteria andProbabilityEqualTo(Integer value) {
			addCriterion("probability =", value, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityNotEqualTo(Integer value) {
			addCriterion("probability <>", value, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityGreaterThan(Integer value) {
			addCriterion("probability >", value, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityGreaterThanOrEqualTo(Integer value) {
			addCriterion("probability >=", value, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityLessThan(Integer value) {
			addCriterion("probability <", value, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityLessThanOrEqualTo(Integer value) {
			addCriterion("probability <=", value, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityIn(List<Integer> values) {
			addCriterion("probability in", values, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityNotIn(List<Integer> values) {
			addCriterion("probability not in", values, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityBetween(Integer value1, Integer value2) {
			addCriterion("probability between", value1, value2, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityNotBetween(Integer value1, Integer value2) {
			addCriterion("probability not between", value1, value2,
					"probability");
			return (Criteria) this;
		}

		public Criteria andActivityDateIsNull() {
			addCriterion("activity_date is null");
			return (Criteria) this;
		}

		public Criteria andActivityDateIsNotNull() {
			addCriterion("activity_date is not null");
			return (Criteria) this;
		}

		public Criteria andActivityDateEqualTo(String value) {
			addCriterion("activity_date =", value, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateNotEqualTo(String value) {
			addCriterion("activity_date <>", value, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateGreaterThan(String value) {
			addCriterion("activity_date >", value, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateGreaterThanOrEqualTo(String value) {
			addCriterion("activity_date >=", value, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateLessThan(String value) {
			addCriterion("activity_date <", value, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateLessThanOrEqualTo(String value) {
			addCriterion("activity_date <=", value, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateLike(String value) {
			addCriterion("activity_date like", value, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateNotLike(String value) {
			addCriterion("activity_date not like", value, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateIn(List<String> values) {
			addCriterion("activity_date in", values, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateNotIn(List<String> values) {
			addCriterion("activity_date not in", values, "activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateBetween(String value1, String value2) {
			addCriterion("activity_date between", value1, value2,
					"activityDate");
			return (Criteria) this;
		}

		public Criteria andActivityDateNotBetween(String value1, String value2) {
			addCriterion("activity_date not between", value1, value2,
					"activityDate");
			return (Criteria) this;
		}

		public Criteria andVersionIsNull() {
			addCriterion("version is null");
			return (Criteria) this;
		}

		public Criteria andVersionIsNotNull() {
			addCriterion("version is not null");
			return (Criteria) this;
		}

		public Criteria andVersionEqualTo(Integer value) {
			addCriterion("version =", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionNotEqualTo(Integer value) {
			addCriterion("version <>", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionGreaterThan(Integer value) {
			addCriterion("version >", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionGreaterThanOrEqualTo(Integer value) {
			addCriterion("version >=", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionLessThan(Integer value) {
			addCriterion("version <", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionLessThanOrEqualTo(Integer value) {
			addCriterion("version <=", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionIn(List<Integer> values) {
			addCriterion("version in", values, "version");
			return (Criteria) this;
		}

		public Criteria andVersionNotIn(List<Integer> values) {
			addCriterion("version not in", values, "version");
			return (Criteria) this;
		}

		public Criteria andVersionBetween(Integer value1, Integer value2) {
			addCriterion("version between", value1, value2, "version");
			return (Criteria) this;
		}

		public Criteria andVersionNotBetween(Integer value1, Integer value2) {
			addCriterion("version not between", value1, value2, "version");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table activity_award
	 * @mbggenerated  Wed Apr 27 16:46:59 CST 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table activity_award
     *
     * @mbggenerated do_not_delete_during_merge Thu Mar 31 11:08:45 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}